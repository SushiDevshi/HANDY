using BepInEx;
using HANDY.HAND;
using HANDY.Weapon;
using R2API;
using R2API.Utils;
using RoR2;
using RoR2.CharacterAI;
using RoR2.Navigation;
using RoR2.Skills;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Networking;
using static HANDY.Helpers;
using static RoR2.CharacterAI.AISkillDriver;
using EntityStates;
using EntityStates.HAND.Weapon;
using Servos;

namespace HANDY
{

    [R2APISubmoduleDependency(new string[]
    {
        "LoadoutAPI",
        "PrefabAPI",
        "SurvivorAPI",
        "AssetPlus",
    })]
    [BepInDependency("com.bepis.r2api")]
    [BepInPlugin("com.SushiDev.HAND", "HAN-D", "1.0.0")]

    public class Main : BaseUnityPlugin
    {
        public bool unity;
        public static GameObject HANDGunnerDrone { get; private set; }
        public static GameObject HANDHealingDrone { get; private set; }
        public GameObject HANDBody { get; private set; }
        public GameObject ServosBody { get; private set; }
        public GameObject ServosMaster { get; private set; }
        public Texture2D HANDPortrait { get; private set; }
        public Texture2D ServosPortrait { get; private set; }
        public Texture2D HURT { get; private set; }
        public Texture2D WHACK { get; private set; }
        public Texture2D DRONE { get; private set; }
        public Texture2D OVERCLOCK { get; private set; }
        public Texture2D FORCED_REASSEMBLY { get; private set; }
        public Texture2D UNETHICAL_REASSEMBLY { get; private set; }

        public DirectorAPI.DirectorCardHolder ServosDirectorCardHolder;
        private void Awake()
        {
            //On.RoR2.Networking.GameNetworkManager.OnClientConnect += (self, user, t) => { };
            this.HANDBody = Resources.Load<GameObject>("Prefabs/CharacterBodies/HANDBody").InstantiateClone("HANDCloneBody", true);
            RegisterNewBody(this.HANDBody);

            this.ServosMaster = Resources.Load<GameObject>("prefabs/charactermasters/MercMonsterMaster").InstantiateClone("ServosMaster", true);
            RegisterNewMaster(this.ServosMaster);

            this.ServosBody = Resources.Load<GameObject>("Prefabs/CharacterBodies/HANDBody").InstantiateClone("ServosBody", true);
            RegisterNewBody(this.ServosBody);

            Main.HANDGunnerDrone = Resources.Load<GameObject>("Prefabs/CharacterBodies/Drone1Body").InstantiateClone("HAND_DRONE_CLONE", true);
            RegisterNewBody(Main.HANDGunnerDrone);

            Main.HANDHealingDrone = Resources.Load<GameObject>("Prefabs/CharacterBodies/Drone2Body").InstantiateClone("HAND_DRONEHEALER_CLONE", true);
            RegisterNewBody(Main.HANDHealingDrone);

            unity = false;

            if (this.HANDBody != null && this.ServosBody != null && this.ServosMaster != null)
            {
                CreateHAND(this.HANDBody);
                CreateServos(this.ServosMaster, this.ServosBody);

                CreateDrones(Main.HANDGunnerDrone, Main.HANDHealingDrone);
            }


            On.RoR2.CharacterBody.OnKilledOtherServer += GlobalEventManagerOnOnCharacterDeath;
            On.RoR2.CharacterModel.EnableItemDisplay += FixInvisibleEnemies;
        }
        private void FixInvisibleEnemies(On.RoR2.CharacterModel.orig_EnableItemDisplay orig, CharacterModel self, ItemIndex itemIndex)
        {
            if (itemIndex != ItemIndex.Bear || self.name != "mdlHAND")
            {
                orig(self, itemIndex);
            };
        }
        private void FixCrowdFunder(GameObject HAND)
        {
            ItemDisplayRuleSet itemDisplayRuleSet = HAND.GetComponent<ItemDisplayRuleSet>();
            List<ItemDisplayRuleSet.NamedRuleGroup> list = new List<ItemDisplayRuleSet.NamedRuleGroup>();
        }

        private void CreateServos(GameObject ServosMaster, GameObject ServosBody)
        {
            ServosBody.AddComponent<ServosOverclockController>();
            ServosBody.GetComponent<SfxLocator>().landingSound = "play_char_land";
            ServosBody.GetComponent<CharacterMotor>().mass = 250;
            ServosBody.GetComponent<CharacterDirection>().turnSpeed = 300;
            ServosBody.GetComponent<ModelLocator>().modelBaseTransform.transform.localScale = ServosBody.GetComponent<ModelLocator>().modelBaseTransform.transform.localScale * 2f;
            
            GeneralSetUp(ServosMaster, ServosBody);
            DestroySkillDrivers(ServosMaster);
            CreateSkillDrivers(ServosMaster);
            SetUpDirectorCard(ServosMaster);
            RegisterServosStats(this.ServosBody.GetComponent<CharacterBody>());
            RegisterServosSkills(ServosBody.GetComponent<SkillLocator>());
            AddServosTokens();
        }
        private void CreateHAND(GameObject HAND)
        {
            HAND.AddComponent<HANDOverclockController>();
            HAND.GetComponent<SfxLocator>().landingSound = "play_char_land";
            HAND.GetComponent<CharacterMotor>().mass = 250;
            HAND.GetComponent<CharacterDirection>().turnSpeed = 300;

            AddHANDTokens();
            RegisterHANDIcons();
            RegisterSetStateOnHurt(HAND);
            RegisterSurvivorDef(HAND);
            RegisterHANDSkills(HAND.GetComponent<SkillLocator>());
            RegisterHANDStats(HAND.GetComponent<CharacterBody>(), this.HANDPortrait);
        }
        private void SetUpDirectorCard(GameObject ServosMaster)
        {
            On.RoR2.CharacterSpawnCard.Awake += CharacterSpawnCard_Awake;
            CharacterSpawnCard characterSpawnCard = ScriptableObject.CreateInstance<CharacterSpawnCard>();
            On.RoR2.CharacterSpawnCard.Awake -= CharacterSpawnCard_Awake;
            characterSpawnCard.directorCreditCost = 250;
            characterSpawnCard.forbiddenAsBoss = false;
            characterSpawnCard.forbiddenFlags = NodeFlags.NoCharacterSpawn;
            characterSpawnCard.hullSize = HullClassification.Human;
            characterSpawnCard.loadout = new SerializableLoadout();
            characterSpawnCard.name = "cscservosboss";
            characterSpawnCard.nodeGraphType = MapNodeGroup.GraphType.Ground;
            characterSpawnCard.noElites = false;
            characterSpawnCard.occupyPosition = false;
            characterSpawnCard.prefab = ServosMaster;
            characterSpawnCard.requiredFlags = NodeFlags.None;
            characterSpawnCard.sendOverNetwork = true;
            DirectorCard directorCard = new DirectorCard();

            directorCard.allowAmbushSpawn = true;
            directorCard.forbiddenUnlockable = "";
            directorCard.minimumStageCompletions = 4;
            directorCard.preventOverhead = false;
            directorCard.requiredUnlockable = "";
            directorCard.selectionWeight = 1;
            directorCard.spawnCard = characterSpawnCard;

            directorCard.spawnDistance = DirectorCore.MonsterSpawnDistance.Standard;
            this.ServosDirectorCardHolder = new DirectorAPI.DirectorCardHolder();
            this.ServosDirectorCardHolder.Card = directorCard;
            this.ServosDirectorCardHolder.InteractableCategory = 0;
            this.ServosDirectorCardHolder.MonsterCategory = DirectorAPI.MonsterCategory.Minibosses;
        }
            private void DestroySkillDrivers(GameObject ServosMaster)
        {
            AISkillDriver SkillDriver1 = ServosMaster.GetComponent<AISkillDriver>();
            AISkillDriver SkillDriver2 = ServosMaster.GetComponent<AISkillDriver>();
            AISkillDriver SkillDriver3 = ServosMaster.GetComponent<AISkillDriver>();
            AISkillDriver SkillDriver4 = ServosMaster.GetComponent<AISkillDriver>();

            Destroy(SkillDriver1);
            Destroy(SkillDriver2);
            Destroy(SkillDriver3);
            Destroy(SkillDriver4);
        }
        private void GeneralSetUp(GameObject ServosMaster, GameObject ServosBody)
        {
            BaseAI ServosAI = ServosMaster.GetComponent<BaseAI>();
            CharacterMaster ServosCharacterMaster = ServosMaster.GetComponent<CharacterMaster>();

            ServosCharacterMaster.isBoss = true;
            ServosCharacterMaster.bodyPrefab = ServosBody;
            ServosCharacterMaster.teamIndex = TeamIndex.Monster;

            ServosAI.desiredSpawnNodeGraphType = RoR2.Navigation.MapNodeGroup.GraphType.Ground;
            ServosAI.navigationType = BaseAI.NavigationType.Nodegraph;
        }
        private void CreateSkillDrivers(GameObject ServosMaster)
        {
            AISkillDriver PrimaryDriver = ServosMaster.AddComponent<AISkillDriver>();
            AISkillDriver SecondaryDriver = ServosMaster.AddComponent<AISkillDriver>();
            AISkillDriver UtilityDriver = ServosMaster.AddComponent<AISkillDriver>();
            AISkillDriver SpecialDriver = ServosMaster.AddComponent<AISkillDriver>();

            PrimaryDriver.activationRequiresTargetLoS = false;
            PrimaryDriver.aimType = AimType.AtCurrentEnemy;
            PrimaryDriver.customName = "Primary";
            PrimaryDriver.driverUpdateTimerOverride = .8f;
            PrimaryDriver.ignoreNodeGraph = false;
            PrimaryDriver.maxDistance = 10;
            PrimaryDriver.minTargetHealthFraction = float.NegativeInfinity;
            PrimaryDriver.maxUserHealthFraction = float.PositiveInfinity;
            PrimaryDriver.minDistance = 1f;
            PrimaryDriver.minTargetHealthFraction = float.NegativeInfinity;
            PrimaryDriver.minUserHealthFraction = float.NegativeInfinity;
            PrimaryDriver.moveInputScale = 1f;
            PrimaryDriver.movementType = MovementType.ChaseMoveTarget;
            PrimaryDriver.moveTargetType = TargetType.CurrentEnemy;
            PrimaryDriver.noRepeat = false;
            PrimaryDriver.requiredSkill = null;
            PrimaryDriver.requireEquipmentReady = false;
            PrimaryDriver.selectionRequiresTargetLoS = true;
            PrimaryDriver.shouldFireEquipment = false;
            PrimaryDriver.shouldSprint = true;
            PrimaryDriver.skillSlot = SkillSlot.Primary;

            SecondaryDriver.activationRequiresTargetLoS = false;
            SecondaryDriver.aimType = AimType.MoveDirection;
            SecondaryDriver.customName = "Secondary";
            SecondaryDriver.driverUpdateTimerOverride = .8f;
            SecondaryDriver.ignoreNodeGraph = false;
            SecondaryDriver.maxDistance = 100;
            SecondaryDriver.minTargetHealthFraction = float.NegativeInfinity;
            SecondaryDriver.maxUserHealthFraction = float.PositiveInfinity;
            SecondaryDriver.minDistance = 0f;
            SecondaryDriver.minTargetHealthFraction = float.NegativeInfinity;
            SecondaryDriver.minUserHealthFraction = float.NegativeInfinity;
            SecondaryDriver.moveInputScale = 1f;
            SecondaryDriver.movementType = MovementType.FleeMoveTarget;
            SecondaryDriver.moveTargetType = TargetType.NearestFriendlyInSkillRange;
            SecondaryDriver.noRepeat = false;
            SecondaryDriver.requiredSkill = null;
            SecondaryDriver.requireEquipmentReady = false;
            SecondaryDriver.selectionRequiresTargetLoS = true;
            SecondaryDriver.shouldFireEquipment = false;
            SecondaryDriver.shouldSprint = true;
            SecondaryDriver.skillSlot = SkillSlot.Secondary;

            UtilityDriver.activationRequiresTargetLoS = false;
            UtilityDriver.aimType = AimType.MoveDirection;
            UtilityDriver.customName = "Utility";
            UtilityDriver.driverUpdateTimerOverride = -1f;
            UtilityDriver.ignoreNodeGraph = false;
            UtilityDriver.maxDistance = 50;
            UtilityDriver.minTargetHealthFraction = float.NegativeInfinity;
            UtilityDriver.maxUserHealthFraction = float.PositiveInfinity;
            UtilityDriver.minDistance = 0f;
            UtilityDriver.minTargetHealthFraction = float.NegativeInfinity;
            UtilityDriver.minUserHealthFraction = float.NegativeInfinity;
            UtilityDriver.moveInputScale = 1f;
            UtilityDriver.movementType = MovementType.ChaseMoveTarget;
            UtilityDriver.moveTargetType = TargetType.CurrentEnemy;
            UtilityDriver.noRepeat = false;
            UtilityDriver.requiredSkill = null;
            UtilityDriver.requireEquipmentReady = false;
            UtilityDriver.selectionRequiresTargetLoS = true;
            UtilityDriver.shouldFireEquipment = false;
            UtilityDriver.shouldSprint = true;
            UtilityDriver.skillSlot = SkillSlot.Utility;
            UtilityDriver.resetCurrentEnemyOnNextDriverSelection = false;

            SpecialDriver.activationRequiresTargetLoS = false;
            SpecialDriver.aimType = AimType.AtCurrentEnemy;
            SpecialDriver.customName = "Special";
            SpecialDriver.driverUpdateTimerOverride = .8f;
            SpecialDriver.ignoreNodeGraph = false;
            SpecialDriver.maxDistance = 50;
            SpecialDriver.minTargetHealthFraction = float.NegativeInfinity;
            SpecialDriver.maxUserHealthFraction = float.PositiveInfinity;
            SpecialDriver.minDistance = 0f;
            SpecialDriver.minTargetHealthFraction = float.NegativeInfinity;
            SpecialDriver.minUserHealthFraction = float.NegativeInfinity;
            SpecialDriver.moveInputScale = 1f;
            SpecialDriver.movementType = MovementType.ChaseMoveTarget;
            SpecialDriver.moveTargetType = TargetType.CurrentEnemy;
            SpecialDriver.noRepeat = false;
            SpecialDriver.requiredSkill = null;
            SpecialDriver.requireEquipmentReady = false;
            SpecialDriver.selectionRequiresTargetLoS = true;
            SpecialDriver.shouldFireEquipment = false;
            SpecialDriver.shouldSprint = true;
            SpecialDriver.skillSlot = SkillSlot.Secondary;

        }
        private void CharacterSpawnCard_Awake(On.RoR2.CharacterSpawnCard.orig_Awake orig, CharacterSpawnCard self)
        {
            self.loadout = new SerializableLoadout();
            orig(self);
        }

        private void RegisterSurvivorDef(GameObject HAND)
        {
            GameObject displayGameObject = HAND.GetComponent<ModelLocator>().modelTransform.gameObject;
            displayGameObject.AddComponent<SurvivorDisplayAnimation>();

            SurvivorDef item = new SurvivorDef
            {
                //We're finding the body prefab here,
                bodyPrefab = HAND,
                //Description
                descriptionToken = "NO MANUAL GIVEN FOR HAN-D MODEL",
                //Display 
                displayPrefab = displayGameObject,
                //Color on the select screen
                primaryColor = new Color(0.8039216f, 0.482352942f, 0.843137264f),
            };
            SurvivorAPI.AddSurvivor(item);
        }
        private void CreateDrones(GameObject GunnerDrone, GameObject HealingDrone)
        {
            CharacterBody gunnerDroneCharacterBody = GunnerDrone.GetComponent<CharacterBody>();
            CharacterBody healingDroneCharacterBody = HealingDrone.GetComponent<CharacterBody>();
            CharacterDeathBehavior characterDeathBehavior = GunnerDrone.GetComponent<CharacterDeathBehavior>();
            CharacterDeathBehavior healerDeathBehavior = HealingDrone.GetComponent<CharacterDeathBehavior>();

            characterDeathBehavior.enabled = false;
            healerDeathBehavior.enabled = false;

            gunnerDroneCharacterBody.baseNameToken = "HAND_GUNNERDRONE_NAME_TOKEN";
            healingDroneCharacterBody.baseNameToken = "HAND_HEALINGDRONE_NAME_TOKEN";
        }

        private void RegisterSetStateOnHurt(GameObject g)
        {
            SetStateOnHurt hurtState = g.AddComponent<SetStateOnHurt>();

            hurtState.canBeFrozen = true;
            hurtState.canBeHitStunned = false;
            hurtState.canBeStunned = false;
            hurtState.hitThreshold = 5f;

            int i = 0;
            EntityStateMachine[] esmr = new EntityStateMachine[2];
            foreach (EntityStateMachine esm in g.GetComponentsInChildren<EntityStateMachine>())
            {
                switch (esm.customName)
                {
                    case "Body":
                        hurtState.targetStateMachine = esm;
                        break;
                    default:
                        if (i < 2)
                        {
                            esmr[i] = esm;
                            Debug.Log(esm.customName);
                        }
                        i++;
                        Debug.Log(i);
                        break;
                }
            }
        }
        private void RegisterHANDIcons()
        {
            this.HANDPortrait = new Texture2D(1, 1);
            this.HURT = new Texture2D(1, 1);
            this.WHACK = new Texture2D(1, 1);
            this.DRONE = new Texture2D(1, 1);
            this.OVERCLOCK = new Texture2D(1, 1);
            this.FORCED_REASSEMBLY = new Texture2D(1, 1);
            this.UNETHICAL_REASSEMBLY = new Texture2D(1, 1);

            this.HURT.LoadImage(Convert.FromBase64String(""));
            this.WHACK.LoadImage(Convert.FromBase64String(""));
            this.DRONE.LoadImage(Convert.FromBase64String(""));
            this.OVERCLOCK.LoadImage(Convert.FromBase64String(""));
            this.FORCED_REASSEMBLY.LoadImage(Convert.FromBase64String(""));
            this.UNETHICAL_REASSEMBLY.LoadImage(Convert.FromBase64String(""));
            this.HANDPortrait.LoadImage(Convert.FromBase64String(@""));
        }
        private void RegisterHANDStats(CharacterBody characterBody, Texture2D portrait)
        {
            characterBody.baseAcceleration = 80f;
            characterBody.baseArmor = 20;
            characterBody.baseAttackSpeed = 1;
            characterBody.baseCrit = 1;
            characterBody.baseDamage = 14;
            characterBody.baseJumpCount = 1;
            characterBody.baseJumpPower = 16;
            characterBody.baseMaxHealth = 300;
            characterBody.baseMaxShield = 0;
            characterBody.baseMoveSpeed = 7;
            characterBody.baseNameToken = "HAND_CLONE_BODY_TOKEN";
            characterBody.subtitleNameToken = "New Servos";
            characterBody.baseRegen = 2.5f;
            characterBody.bodyFlags = CharacterBody.BodyFlags.ImmuneToExecutes | CharacterBody.BodyFlags.SprintAnyDirection | CharacterBody.BodyFlags.ResistantToAOE | CharacterBody.BodyFlags.Mechanical;
            characterBody.crosshairPrefab = characterBody.crosshairPrefab = Resources.Load<GameObject>("Prefabs/CharacterBodies/HuntressBody").GetComponent<CharacterBody>().crosshairPrefab;
            characterBody.hideCrosshair = false;
            characterBody.hullClassification = HullClassification.Human;
            characterBody.isChampion = false;
            characterBody.levelArmor = 0;
            characterBody.levelAttackSpeed = 0;
            characterBody.levelCrit = 0;
            characterBody.levelDamage = 2.4f;
            characterBody.levelArmor = 0;
            characterBody.levelJumpPower = 0;
            characterBody.levelMaxHealth = 45;
            characterBody.levelMaxShield = 0;
            characterBody.levelMoveSpeed = 0;
            characterBody.levelRegen = 0.5f;
            characterBody.portraitIcon = portrait;
            characterBody.preferredPodPrefab = Resources.Load<GameObject>("prefabs/networkedobjects/robocratepod");
        }
        private void RegisterHANDSkills(SkillLocator skillLocator)
        {
            SkillFamily primaryskillFamily = skillLocator.primary.skillFamily;
            SkillFamily secondaryskillFamily = skillLocator.secondary.skillFamily;
            SkillFamily utilityskillFamily = skillLocator.utility.skillFamily;
            SkillFamily specialskillFamily = skillLocator.special.skillFamily;
            SkillDef Primary = primaryskillFamily.variants[primaryskillFamily.defaultVariantIndex].skillDef;
            SkillDef Secondary = secondaryskillFamily.variants[secondaryskillFamily.defaultVariantIndex].skillDef;
            SkillDef Utility = utilityskillFamily.variants[utilityskillFamily.defaultVariantIndex].skillDef;
            SkillDef Special = specialskillFamily.variants[specialskillFamily.defaultVariantIndex].skillDef;

            var Special_Variants = specialskillFamily.variants;
            var Primary_Variants = primaryskillFamily.variants;

            //Primary
            Primary.icon = Sprite.Create(this.HURT, new Rect(0, 0, this.HURT.width, this.HURT.height), new Vector2(.5f, .5f));
            Primary.noSprint = false;
            Primary.canceledFromSprinting = false;
            Primary.baseRechargeInterval = 0;
            Primary.baseMaxStock = 1;
            Primary.rechargeStock = 1;
            Primary.shootDelay = 0.1f;
            Primary.beginSkillCooldownOnSkillEnd = false;
            Primary.isCombatSkill = true;
            Primary.mustKeyPress = false;
            Primary.requiredStock = 1;
            Primary.stockToConsume = 1;
            Primary.skillNameToken = "HAND_PRIMARY_NAME";
            Primary.skillDescriptionToken = "HAND_PRIMARY_DESCRIPTION";
            Primary.activationState = new SerializableEntityStateType(typeof(HURT));

            //Secondary
            Secondary.icon = Sprite.Create(DRONE, new Rect(0, 0, DRONE.width, DRONE.height), new Vector2(.5f, .5f));
            Secondary.noSprint = false;
            Secondary.canceledFromSprinting = false;
            Secondary.baseRechargeInterval = 8;
            Secondary.baseMaxStock = 3;
            Secondary.rechargeStock = 1;
            Secondary.requiredStock = 1;
            Secondary.stockToConsume = 1;
            Secondary.isCombatSkill = false;
            Secondary.mustKeyPress = false;
            Secondary.isBullets = false;
            Secondary.shootDelay = 0.08f;
            Secondary.skillNameToken = "HAND_SECONDARY_NAME";
            Secondary.skillDescriptionToken = "HAND_SECONDARY_DESCRIPTION";
            Secondary.activationState = new SerializableEntityStateType(typeof(POWERSAVER));

            //Utility 
            Utility.icon = Sprite.Create(OVERCLOCK, new Rect(0, 0, OVERCLOCK.width, OVERCLOCK.height), new Vector2(.5f, .5f));
            Utility.baseRechargeInterval = 15;
            Utility.noSprint = false;
            Utility.baseMaxStock = 1;
            Utility.isCombatSkill = true;
            Utility.canceledFromSprinting = false;
            Utility.rechargeStock = 1;
            Utility.requiredStock = 1;
            Utility.stockToConsume = 1;
            Utility.isBullets = false;
            Utility.shootDelay = 0.08f;
            Utility.skillNameToken = "HAND_UTILITY_NAME";
            Utility.skillDescriptionToken = "HAND_UTILITY_DESCRIPTION";
            Utility.activationState = new SerializableEntityStateType(typeof(OVERCLOCK));

            //Special
            Special.icon = Sprite.Create(FORCED_REASSEMBLY, new Rect(0, 0, FORCED_REASSEMBLY.width, FORCED_REASSEMBLY.height), new Vector2(.5f, .5f));
            Special.baseRechargeInterval = 8;
            Special.rechargeStock = 1;
            Special.noSprint = false;
            Special.beginSkillCooldownOnSkillEnd = true;
            Special.stockToConsume = 1;
            Special.requiredStock = 1;
            Special.baseMaxStock = 1;
            Special.canceledFromSprinting = false;
            Special.skillNameToken = "HAND_SPECIAL_NAME";
            Special.skillDescriptionToken = "HAND_SPECIAL_DESCRIPTION";
            Special.activationState = new SerializableEntityStateType(typeof(CHARGESLAM));

            var LoadoutSpecial = ScriptableObject.CreateInstance<SkillDef>();
            LoadoutSpecial.icon = Sprite.Create(UNETHICAL_REASSEMBLY, new Rect(0, 0, UNETHICAL_REASSEMBLY.width, UNETHICAL_REASSEMBLY.height), new Vector2(.5f, .5f));
            LoadoutSpecial.activationState = new SerializableEntityStateType(typeof(CHARGEBIGSLAM));
            LoadoutSpecial.baseMaxStock = 1;
            LoadoutSpecial.baseRechargeInterval = 12;
            LoadoutSpecial.beginSkillCooldownOnSkillEnd = false;
            LoadoutSpecial.canceledFromSprinting = false;
            LoadoutSpecial.fullRestockOnAssign = false;
            LoadoutSpecial.isBullets = false;
            LoadoutSpecial.isCombatSkill = true;
            //LoadoutSpecial.mustKeyPress = true;
            LoadoutSpecial.noSprint = false;
            LoadoutSpecial.rechargeStock = 1;
            LoadoutSpecial.requiredStock = 1;
            LoadoutSpecial.shootDelay = 0.1f;
            LoadoutSpecial.activationStateMachineName = specialskillFamily.defaultSkillDef.activationStateMachineName;
            LoadoutSpecial.skillDescriptionToken = "HAND_SPECIAL_ALT_DESCRIPTION";
            LoadoutSpecial.skillNameToken = "HAND_SPECIAL_ALT_NAME";
            LoadoutSpecial.skillName = "HAND_SPECIAL_ALT_NAME";
            LoadoutSpecial.stockToConsume = 1;

            var LoadoutPrimary = ScriptableObject.CreateInstance<SkillDef>();
            LoadoutPrimary.icon = Sprite.Create(WHACK, new Rect(0, 0, WHACK.width, WHACK.height), new Vector2(.5f, .5f));
            LoadoutPrimary.activationState = new SerializableEntityStateType(typeof(WHACK));
            LoadoutPrimary.baseMaxStock = 1;
            LoadoutPrimary.baseRechargeInterval = 0;
            LoadoutPrimary.beginSkillCooldownOnSkillEnd = false;
            LoadoutPrimary.canceledFromSprinting = false;
            LoadoutPrimary.fullRestockOnAssign = false;
            LoadoutPrimary.isBullets = false;
            LoadoutPrimary.isCombatSkill = true;
            //LoadoutPrimary.mustKeyPress = true;
            LoadoutPrimary.noSprint = false;
            LoadoutPrimary.rechargeStock = 1;
            LoadoutPrimary.requiredStock = 1;
            LoadoutPrimary.shootDelay = 0.1f;
            LoadoutPrimary.activationStateMachineName = primaryskillFamily.defaultSkillDef.activationStateMachineName;
            LoadoutPrimary.skillDescriptionToken = "HAND_PRIMARY_ALT_DESCRIPTION";
            LoadoutPrimary.skillNameToken = "HAND_PRIMARY_ALT_NAME";
            LoadoutPrimary.skillName = "HAND_PRIMARY_ALT_NAME";
            LoadoutPrimary.stockToConsume = 1;

            LoadoutAPI.AddSkillDef(LoadoutSpecial);
            LoadoutAPI.AddSkillDef(LoadoutPrimary);

            SkillFamily.Variant LoadoutSpecialVariant = new SkillFamily.Variant
            {
                skillDef = LoadoutSpecial,
                unlockableName = "",
                viewableNode = new ViewablesCatalog.Node("R", false)
            };
            Array.Resize<SkillFamily.Variant>(ref Special_Variants, Special_Variants.Length + 1);
            Special_Variants[Special_Variants.Length - 1] = LoadoutSpecialVariant;
            specialskillFamily.variants = Special_Variants;

            SkillFamily.Variant LoadoutPrimaryVariant = new SkillFamily.Variant
            {
                skillDef = LoadoutPrimary,
                unlockableName = "",
                viewableNode = new ViewablesCatalog.Node("M1", false)
            };
            Array.Resize<SkillFamily.Variant>(ref Primary_Variants, Primary_Variants.Length + 1);
            Primary_Variants[Primary_Variants.Length - 1] = LoadoutPrimaryVariant;
            primaryskillFamily.variants = Primary_Variants;
        }
        private void RegisterServosSkills(SkillLocator skillLocator)
        {
            SkillFamily primaryskillFamily = skillLocator.primary.skillFamily;
            SkillFamily secondaryskillFamily = skillLocator.secondary.skillFamily;
            SkillFamily utilityskillFamily = skillLocator.utility.skillFamily;
            SkillFamily specialskillFamily = skillLocator.special.skillFamily;
            SkillDef Primary = primaryskillFamily.variants[primaryskillFamily.defaultVariantIndex].skillDef;
            SkillDef Secondary = secondaryskillFamily.variants[secondaryskillFamily.defaultVariantIndex].skillDef;
            SkillDef Utility = utilityskillFamily.variants[utilityskillFamily.defaultVariantIndex].skillDef;
            SkillDef Special = specialskillFamily.variants[specialskillFamily.defaultVariantIndex].skillDef;

            Primary.noSprint = false;
            Primary.canceledFromSprinting = false;
            Primary.baseRechargeInterval = 0;
            Primary.baseMaxStock = 1;
            Primary.rechargeStock = 1;
            Primary.shootDelay = 0.1f;
            Primary.beginSkillCooldownOnSkillEnd = false;
            Primary.isCombatSkill = true;
            Primary.mustKeyPress = false;
            Primary.requiredStock = 1;
            Primary.stockToConsume = 1;
            Primary.activationState = new SerializableEntityStateType(typeof(Servos.Weapon.PAIN));

            //secondary
            Secondary.noSprint = false;
            Secondary.canceledFromSprinting = false;
            Secondary.baseRechargeInterval = 20;
            Secondary.baseMaxStock = 3;
            Secondary.rechargeStock = 1;
            Secondary.requiredStock = 1;
            Secondary.stockToConsume = 1;
            Secondary.isCombatSkill = false;
            Secondary.mustKeyPress = false;
            Secondary.isBullets = false;
            Secondary.shootDelay = 0f;
            Secondary.activationState = new SerializableEntityStateType(typeof(Servos.Weapon.HEALINGPAIN));

            //Utility 
            Utility.baseRechargeInterval = 15;
            Utility.noSprint = false;
            Utility.baseMaxStock = 1;
            Utility.isCombatSkill = true;
            Utility.canceledFromSprinting = false;
            Utility.rechargeStock = 1;
            Utility.requiredStock = 1;
            Utility.stockToConsume = 1;
            Utility.isBullets = false;
            Utility.shootDelay = 0.08f;
            Utility.activationState = new SerializableEntityStateType(typeof(Servos.Weapon.PLAYERPAIN));

            //Special
            Special.baseRechargeInterval = 10;
            Special.rechargeStock = 1;
            Special.noSprint = false;
            Special.beginSkillCooldownOnSkillEnd = false;
            Special.stockToConsume = 1;
            Special.requiredStock = 1;
            Special.baseMaxStock = 1;
            Special.canceledFromSprinting = false;
            Special.activationState = new SerializableEntityStateType(typeof(Servos.Weapon.CHARGEBIGSLAM));
        }
        private void RegisterServosStats(CharacterBody characterBody)
        {
            characterBody.baseAcceleration = 80f;
            characterBody.baseArmor = 25;
            characterBody.baseAttackSpeed = 1;
            characterBody.baseCrit = 0;
            characterBody.baseDamage = 30;
            characterBody.baseJumpCount = 1;
            characterBody.baseJumpPower = 16;
            characterBody.baseMaxHealth = 1500;
            characterBody.baseMaxShield = 0;
            characterBody.baseMoveSpeed = 7;
            characterBody.baseNameToken = "SERVOS_BODY_TOKEN";
            characterBody.subtitleNameToken = "Reactivated Servos";
            characterBody.baseRegen = 2.5f;
            characterBody.bodyFlags = CharacterBody.BodyFlags.ImmuneToExecutes | CharacterBody.BodyFlags.SprintAnyDirection | CharacterBody.BodyFlags.ResistantToAOE | CharacterBody.BodyFlags.Mechanical;
            //characterBody.crosshairPrefab = characterBody.crosshairPrefab = Resources.Load<GameObject>("Prefabs/CharacterBodies/HuntressBody").GetComponent<CharacterBody>().crosshairPrefab;
            characterBody.hideCrosshair = false;
            characterBody.hullClassification = HullClassification.Human;
            characterBody.isChampion = false;
            characterBody.levelArmor = 0;
            characterBody.levelAttackSpeed = 0;
            characterBody.levelCrit = 0;
            characterBody.levelDamage = 5f;
            characterBody.levelArmor = 0;
            characterBody.levelJumpPower = 0;
            characterBody.levelMaxHealth = 500;
            characterBody.levelMaxShield = 0;
            characterBody.levelMoveSpeed = 0;
            characterBody.levelRegen = 0f;
            //characterBody.teamComponent.teamIndex = TeamIndex.Monster;
            //characterBody.preferredPodPrefab = Resources.Load<GameObject>("prefabs/networkedobjects/robocratepod");
        }
        private void AddServosTokens()
        {
            R2API.AssetPlus.Languages.AddToken("SERVOS_BODY_TOKEN", "Servos");
        }
            private void AddHANDTokens()
        {
            R2API.AssetPlus.Languages.AddToken("HAND_CLONE_BODY_TOKEN", "HAN-D");
            R2API.AssetPlus.Languages.AddToken("HAND_GUNNERDRONE_NAME_TOKEN", "HAN-D Gunner Drone");
            R2API.AssetPlus.Languages.AddToken("HAND_HEALINGDRONE_NAME_TOKEN", "HAN-D Healing Drone");
            R2API.AssetPlus.Languages.AddToken("HAND_PRIMARY_NAME", "HURT");
            R2API.AssetPlus.Languages.AddToken("HAND_PRIMARY_DESCRIPTION", "APPLY FORCE TO ALL COMBATANTS FOR <color=#E5C962>400% DAMAGE.</color>");
            R2API.AssetPlus.Languages.AddToken("HAND_SECONDARY_NAME", "DRONE");
            R2API.AssetPlus.Languages.AddToken("HAND_SECONDARY_DESCRIPTION", "RELEASE A HEALING DRONE THAT <style=cIsUtility>LIVES FOR 8 SECONDS</style>");
            R2API.AssetPlus.Languages.AddToken("HAND_UTILITY_NAME", "OVERCLOCK");
            R2API.AssetPlus.Languages.AddToken("HAND_UTILITY_DESCRIPTION", "INCREASE <color=#E5C962>ATTACK SPEED, DAMAGE, AND MOVEMENT SPEED. SUMMON DRONES ON COMBATANT DEATH. </color> ALL ATTACKS <color=#9CE562>HEAL 10% OF TOTAL HEALTH</color>. <color=#95CDE5>INCREASE DURATION BY KILLING COMBATANTS.</color>");
            R2API.AssetPlus.Languages.AddToken("HAND_SPECIAL_NAME", "FORCED_REASSEMBLY");
            R2API.AssetPlus.Languages.AddToken("HAND_SPECIAL_DESCRIPTION", "APPLY GREAT FORCE TO THE GROUND, <style=cIsUtility>CAUSING AN EARTHQUAKE TO FORM</style>. DEALS <color=#E5C962>400% DAMAGE</color> <style=cIsUtility>TO ENEMIES CAUGHT IN THE IMPACT</style> AND CAUSES <color=#E5C962>400% DAMAGE</color> <style=cIsUtility>TO ENEMIES CAUGHT IN THE EARTHQUAKE.</style>");
            R2API.AssetPlus.Languages.AddToken("HAND_SPECIAL_ALT_NAME", "UNETHICAL_REASSEMBLY");
            R2API.AssetPlus.Languages.AddToken("HAND_SPECIAL_ALT_DESCRIPTION", "APPLY UNETHICAL FORCE TO THE GROUND, AND DEAL <color=#E5C962>800% DAMAGE</color> TO ENEMIES CAUGHT IN THE IMPACT.");
            R2API.AssetPlus.Languages.AddToken("HAND_PRIMARY_ALT_NAME", "WHACK");
            R2API.AssetPlus.Languages.AddToken("HAND_PRIMARY_ALT_DESCRIPTION", "APPLY WACKY FORCE TO ALL COMBATANTS FOR <color=#E5C962>200% DAMAGE</color> <style=cIsUtility>AND PULL ENEMIES TOWARDS YOU.</color>");
        }
        private void GlobalEventManagerOnOnCharacterDeath(On.RoR2.CharacterBody.orig_OnKilledOtherServer orig, CharacterBody self, DamageReport damageReport)
        {
            orig(self, damageReport);
            if (damageReport != null && damageReport.attacker && damageReport.attackerBody && damageReport.attackerMaster && damageReport.victim && damageReport.victimBody && damageReport.victimMaster)
            {
                base.Logger.Log(BepInEx.Logging.LogLevel.Info, "Passed check one, damage report is not null, and attacker, attackerbody, attackermaster, victim, victimbody, and victim master exist!");
                if (!damageReport.victimBody.baseNameToken.Contains("DRONE") && !damageReport.victimBody.baseNameToken.Contains("NULLIFIER") && !damageReport.victimBody.baseNameToken.Contains("JELLYFISH"))
                {
                    base.Logger.Log(BepInEx.Logging.LogLevel.Info, "Passed check two, victims are not drones, void reavers, and jellyfishes!");
                    if (damageReport.attackerBody.baseNameToken == "HAND_CLONE_BODY_TOKEN" && damageReport.attacker.GetComponent<HANDOverclockController>().overclockOn)
                    {
                        base.Logger.Log(BepInEx.Logging.LogLevel.Info, "Passed check three, attackerBody.baseNameToken is HAND_CLONE_BODY_TOKEN, and overclock is on!");
                        {
                            orig(self, damageReport);
                            //CharacterMaster characterMaster;
                            if (damageReport.attackerBody && damageReport.attackerMaster && damageReport.attacker && damageReport.victimBody && damageReport.victimMaster && damageReport.victim && damageReport.attackerBody.teamComponent)
                            {
                                damageReport.attacker.GetComponent<HANDOverclockController>().AddDurationOnHit();
                                if (TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(damageReport.attackerBody.teamComponent.teamIndex).Count != 15 && damageReport.attackerBody.multiKillCount <= 4)
                                {
                                    SendNetworkMessage(damageReport.attacker.GetComponent<CharacterBody>().networkIdentity.netId, 1);
                                    damageReport.attackerBody.healthComponent.HealFraction(10, default);

                                }
                            }
                        }
                    }
                }
            }
        }

        private class SurvivorDisplayAnimation : MonoBehaviour
        {

            internal void OnEnable()
            {
                if (gameObject.transform.parent.gameObject.name == "CharacterPad")
                {
                    Debug.Log("animation");
                    var animator = gameObject.GetComponent<Animator>();
                    Shooting(animator);

                }
                else
                {
                    Debug.Log("no animation");
                }
            }

            private void Shooting(Animator animator)
            {
                PlayAnimation("Gesture", "ChargeSlam", "ChargeSlam.playbackRate", ChargeSlam.baseDuration, animator);

                var coroutine = Fire(animator);
                StartCoroutine(coroutine);
            }

            IEnumerator Fire(Animator animator)
            {
                yield return new WaitForSeconds(0.5f);

                PlayAnimation("Gesture", "Slam", "Slam.playbackRate", Slam.baseDuration, animator);

                Destroy(this);
            }

            private void PlayAnimation(string layerName, string animationStateName, string playbackRateParam, float duration, Animator animator)
            {
                int layerIndex = animator.GetLayerIndex(layerName);
                animator.SetFloat(playbackRateParam, 1f);
                animator.PlayInFixedTime(animationStateName, layerIndex, 0f);
                animator.Update(0f);
                float length = animator.GetCurrentAnimatorStateInfo(layerIndex).length;
                animator.SetFloat(playbackRateParam, length / duration);
                Util.PlaySound("Play_MULT_shift_hit", this.gameObject);
            }
        }

        public const Int16 HandleId = 9692;

        public class MyMessage : MessageBase
        {
            public NetworkInstanceId objectID;
            public int summonType;

            public override void Serialize(NetworkWriter writer)
            {
                writer.Write(objectID);
                writer.Write(summonType);
            }

            public override void Deserialize(NetworkReader reader)
            {
                objectID = reader.ReadNetworkId();
                summonType = reader.ReadInt32();
            }
        }

        public static void SendNetworkMessage(NetworkInstanceId myObjectID, int summoningType)
        {
            NetworkServer.SendToAll(HandleId, new MyMessage
            {
                objectID = myObjectID,
                summonType = summoningType
            });
        }

        [RoR2.Networking.NetworkMessageHandler(msgType = HandleId, client = true)]
        public static void HandleDropItem(NetworkMessage netMsg)
        {
            var MyMessage = netMsg.ReadMessage<MyMessage>();


            if (NetworkServer.active)
            {
                CharacterBody characterBody = ClientScene.FindLocalObject(MyMessage.objectID).GetComponent<CharacterBody>();
                CharacterMaster characterMaster;
                if (characterBody)
                {
                    if (characterBody.networkIdentity.netId.Value > 0)
                    {
                        if (MyMessage.summonType == 1) // brood
                        {
                            if (characterBody.inventory && characterBody.multiKillCount <= 4 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 15)
                            {
                                characterMaster = new MasterSummon
                                {
                                    masterPrefab = MasterCatalog.FindMasterPrefab("Drone1Master"),
                                    position = characterBody.footPosition + characterBody.transform.up,
                                    rotation = characterBody.transform.rotation,
                                    summonerBodyObject = null,
                                    ignoreTeamMemberLimit = false,
                                    teamIndexOverride = TeamIndex.Player
                                }.Perform();

                                if (characterMaster.inventory && characterBody.inventory && characterBody.multiKillCount <= 4 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 15)
                                {
                                    //base.Logger.Log(BepInEx.Logging.LogLevel.Info, "attackerBody's inventory is not null! Copying items!");
                                    characterMaster.inventory.CopyItemsFrom(characterBody.inventory);
                                    characterMaster.inventory.ResetItem(ItemIndex.AutoCastEquipment);
                                    characterMaster.inventory.ResetItem(ItemIndex.BeetleGland);
                                    characterMaster.inventory.ResetItem(ItemIndex.ExtraLife);
                                    characterMaster.inventory.ResetItem(ItemIndex.ExtraLifeConsumed);
                                    characterMaster.inventory.ResetItem(ItemIndex.FallBoots);
                                    characterMaster.inventory.ResetItem(ItemIndex.TonicAffliction);
                                    characterMaster.inventory.ResetItem(ItemIndex.ExplodeOnDeath);

                                    characterMaster.inventory.CopyEquipmentFrom(characterBody.inventory);
                                }
                                if (characterMaster.gameObject && characterMaster.bodyPrefab && characterBody.networkIdentity.netId.Value > 0 && characterBody.multiKillCount <= 4 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 15)
                                {
                                    //base.Logger.Log(BepInEx.Logging.LogLevel.Info, "characterMaster.gameObject and characterMaster.bodyPrefab are not nulL! Switching body prefabs and spawning.");
                                    characterMaster.bodyPrefab = Main.HANDGunnerDrone   ;
                                    characterMaster.Respawn(characterMaster.GetBody().footPosition + Vector3.up + Vector3.up, Quaternion.identity);

                                    if (characterMaster.gameObject.GetComponent<AIOwnership>() && characterBody.networkIdentity.netId.Value > 0 && characterBody.multiKillCount <= 4 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 15)
                                    {
                                        AIOwnership component4 = characterMaster.gameObject.GetComponent<AIOwnership>();
                                        //base.Logger.Log(BepInEx.Logging.LogLevel.Info, "characterMaster.gameObject has component AIOwnership! Setting ownerMaster!");
                                        component4.ownerMaster = characterBody.master;
                                    }
                                    if (characterMaster.gameObject.GetComponent<BaseAI>() && characterBody.networkIdentity.netId.Value < 0 && characterBody.multiKillCount <= 4 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 8 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 9 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 10 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 11 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 12 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 13 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 14 && TeamComponent.GetTeamMembers(characterBody.teamComponent.teamIndex).Count != 15)
                                    {
                                        BaseAI component5 = characterMaster.gameObject.GetComponent<BaseAI>();
                                        //base.Logger.Log(BepInEx.Logging.LogLevel.Info, "characterMaster.gameObject has component AIOwnership! Setting fields leader.gameObject, isHealer, and fullVision!");
                                        component5.leader.gameObject = characterBody.master.gameObject;
                                        component5.isHealer = false;
                                        component5.fullVision = true;
                                    };
                                }
                            }
                        }
                        else if (MyMessage.summonType == 2) // many clones
                        {
                            characterMaster = new MasterSummon
                            {
                                masterPrefab = MasterCatalog.FindMasterPrefab("Drone2Master"),
                                position = characterBody.footPosition + characterBody.transform.up,
                                rotation = characterBody.transform.rotation,
                                summonerBodyObject = null,
                                ignoreTeamMemberLimit = false,
                                teamIndexOverride = TeamIndex.Player

                            }.Perform();


                            if (characterBody.inventory && characterMaster.inventory)
                            {
                                characterMaster.inventory.CopyItemsFrom(characterBody.inventory);
                                characterMaster.inventory.ResetItem(ItemIndex.AutoCastEquipment);
                                characterMaster.inventory.ResetItem(ItemIndex.BeetleGland);
                                characterMaster.inventory.ResetItem(ItemIndex.ExtraLife);
                                characterMaster.inventory.ResetItem(ItemIndex.ExtraLifeConsumed);
                                characterMaster.inventory.ResetItem(ItemIndex.FallBoots);
                                characterMaster.inventory.ResetItem(ItemIndex.TonicAffliction);
                                characterMaster.inventory.ResetItem(ItemIndex.ExplodeOnDeath);
                            }

                            AIOwnership component4 = characterMaster.gameObject.GetComponent<AIOwnership>();
                            BaseAI component5 = characterMaster.gameObject.GetComponent<BaseAI>();

                            if (characterMaster.gameObject && characterMaster.bodyPrefab && Main.HANDHealingDrone)
                            {
                                characterMaster.gameObject.AddComponent<MasterSuicideOnTimer>().lifeTimer = 8f;
                                characterMaster.bodyPrefab = Main.HANDHealingDrone;
                                characterMaster.Respawn(characterMaster.GetBody().footPosition + Vector3.up + Vector3.up, Quaternion.identity);
                            }
                            if (component4 && characterBody.master)
                            {
                                component4.ownerMaster = characterBody.master;
                            }
                            if (component5 && characterBody.master.gameObject)
                            {
                                component5.leader.gameObject = characterBody.master.gameObject;
                                component5.isHealer = true;
                                component5.fullVision = true;
                            }
                        }
                    }
                }
            }
        }
    }
}
